module Efyu.Syntax.Expression where

import Efyu.Syntax.Syntax
import Efyu.Syntax.Utils
import Text.Parsec

-- TODO: Use patterns instead of parsing identifier
lambdaP :: EfyuParser u Expression
lambdaP = withWhitespace $ do
  char '\\'
  var <- identifier
  whitespace
  string "->"
  Lambda var <$> expressionP

-- applyP :: EfyuParser u Expression
-- applyP = withWhitespace $ do
--   fn <- expressionP
--   Apply fn <$> expressionP

expressionP :: EfyuParser u Expression
expressionP = withWhitespace . withOptionalParens $ p
  where
    p = literalP <|> lambdaP <|> letBindingP <|> varP <?> "Syntax parsing error"

parseExpression :: EfyuParser u Expression
parseExpression = withWhitespace expressionP
